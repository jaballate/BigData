1.	Clonar el repo donde se encuentran las imágenes y moverse a la carpeta. 

	•	git clone https://github.com/krejcmat/hadoop-hbase-docker.git
	•	cd hadoop-hbase-docker

2.	Se debe ejecutar los siguientes comandos para descargar desde el contenedor  las imágenes master y esclavas deseadas.

	•	docker pull krejcmat/hadoop-hbase-master:latest
	•	docker pull krejcmat/hadoop-hbase-slave:latest

	La siguiente instrucción se ejecuta para compilar las imágenes a partir de las fuentes (Dockerfiles).

	•	./build-image.sh hadoop-hbase-base 

	La siguiente instrucción se puede usar para hacer un chequeo de las imágenes descargadas.

	•	docker images

3.	Inicializar clúster hadoop (maestro y esclavos), indicando el Tag de la imagen y la cantidad de esclavos (en este caso el 3 representa los esclavos).

	•	sudo ./start-container.sh latest 3

4.	Se chequean y configuran los miembros en el master.

	La siguiente instrucción es para chequear los miembros.

	•	serf members

	La siguiente instrucción es para configurar los miembros.

	•	cd ~
	•	./configure-members.sh

5.	Se inicializa hadoop y hbase.

	•	./start-hadoop.sh 
	•	./start-hbase.sh

	Si desea detener hadoop se puede usar la siguiente instrucción.

	•	./stop-hadoop.sh

6.	Se habilita el puerto para hbase.

	•	hbase thrift start -p 9090

7.	Dentro del master se ejecutan las instrucciones para instalar python, la librería happybase y descargar el código fuente desde el repositorio.

	•	apt-get update
	•	apt-get install python python-pip git
	•	pip install happybase
	•	git clone https://github.com/jaballate/BigData.git
	•	cd BigData

8.	Dentro de la carpeta del proyecto descargado ejecutar el script para leer los datos del dataset y crear las familias en hbase. 

	•	./set-into-hbase.sh F(numero) C(numero)

9.	Dentro de la carpeta del proyecto descargado ejecutar el script de salida de datos.

	•	./get-from-hbase.sh F(numero) C(numero)
